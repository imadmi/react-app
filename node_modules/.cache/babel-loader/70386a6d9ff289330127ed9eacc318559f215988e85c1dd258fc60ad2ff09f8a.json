{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\lmax\\\\Desktop\\\\my-react-project\\\\src\\\\components\\\\pages\\\\About.js\",\n  _s = $RefreshSig$();\nimport Particles from \"react-particles\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction About() {\n  _s();\n  const particlesInit = useCallback(async engine => {\n    console.log(engine);\n    // you can initiate the tsParticles instance (engine) here, adding custom shapes or presets\n    // this loads the tsparticles package bundle, it's the easiest method for getting everything ready\n    // starting from v2 you can add only the features you need reducing the bundle size\n    await loadFull(engine);\n  }, []);\n  const particlesLoaded = useCallback(async container => {\n    await console.log(container);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Particles, {\n      params: {\n        particles: {\n          number: {\n            value: 200,\n            density: {\n              enable: true,\n              value_area: 1000\n            }\n          }\n        }\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n_s(About, \"PjleD03JXt5mR6AE5+SxrsWvXBc=\");\n_c = About;\nexport default About;\nvar _c;\n$RefreshReg$(_c, \"About\");","map":{"version":3,"names":["Particles","jsxDEV","_jsxDEV","Fragment","_Fragment","About","_s","particlesInit","useCallback","engine","console","log","loadFull","particlesLoaded","container","children","params","particles","number","value","density","enable","value_area","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/lmax/Desktop/my-react-project/src/components/pages/About.js"],"sourcesContent":["import Particles from \"react-particles\";\r\n\r\nfunction About() {\r\n\r\n    const particlesInit = useCallback(async engine => {\r\n        console.log(engine);\r\n        // you can initiate the tsParticles instance (engine) here, adding custom shapes or presets\r\n        // this loads the tsparticles package bundle, it's the easiest method for getting everything ready\r\n        // starting from v2 you can add only the features you need reducing the bundle size\r\n        await loadFull(engine);\r\n    }, []);\r\n\r\n    const particlesLoaded = useCallback(async container => {\r\n        await console.log(container);\r\n    }, []);\r\n    \r\n    return (\r\n      <>\r\n      <Particles\r\n        params={{\r\n          particles: {\r\n            number: {\r\n              value: 200,\r\n              density: {\r\n                enable: true,\r\n                value_area: 1000,\r\n              }\r\n            },\r\n          },\r\n        }}\r\n      />\r\n      </>\r\n    );\r\n  }\r\n  \r\n  export default About;"],"mappings":";;AAAA,OAAOA,SAAS,MAAM,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAExC,SAASC,KAAKA,CAAA,EAAG;EAAAC,EAAA;EAEb,MAAMC,aAAa,GAAGC,WAAW,CAAC,MAAMC,MAAM,IAAI;IAC9CC,OAAO,CAACC,GAAG,CAACF,MAAM,CAAC;IACnB;IACA;IACA;IACA,MAAMG,QAAQ,CAACH,MAAM,CAAC;EAC1B,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMI,eAAe,GAAGL,WAAW,CAAC,MAAMM,SAAS,IAAI;IACnD,MAAMJ,OAAO,CAACC,GAAG,CAACG,SAAS,CAAC;EAChC,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEZ,OAAA,CAAAE,SAAA;IAAAW,QAAA,eACAb,OAAA,CAACF,SAAS;MACRgB,MAAM,EAAE;QACNC,SAAS,EAAE;UACTC,MAAM,EAAE;YACNC,KAAK,EAAE,GAAG;YACVC,OAAO,EAAE;cACPC,MAAM,EAAE,IAAI;cACZC,UAAU,EAAE;YACd;UACF;QACF;MACF;IAAE;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EACF,iBACC;AAEP;AAACpB,EAAA,CA/BMD,KAAK;AAAAsB,EAAA,GAALtB,KAAK;AAiCZ,eAAeA,KAAK;AAAC,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}